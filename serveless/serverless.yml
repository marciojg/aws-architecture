
service: api-gateway-and-lambdas

custom:
  # arnSns1Topic: '<ARN-SNS-AQUI>'
  # arnSqs1Queue: '<ARN-SQS-AQUI>'
  arnSns1Topic: 'arn:aws:sns:us-east-1:644689573437:sns-1-topic'
  arnSqs1Queue: 'arn:aws:sqs:us-east-1:644689573437:sqs-1-queue'
  bucket: 's3-bucket-final'

provider:
  name: aws
  
  runtime: python3.8
  region: 'us-east-1'
  memorySize: 128
  
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'sns:*'
      Resource:
        - ${self:custom.arnSns1Topic}
    - Effect: 'Allow'
      Action:
        - 'sqs:*'
      Resource:
        -  ${self:custom.arnSqs1Queue}
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"

package:
  exclude:
    - node_modules/*
    - ./node_modules/**
    - layer/**
    - schemas/*
    
layers:
  LayerDependencies:
    path: layer
    description: "learning layers"


functions:
  book-create:
    handler: book_create.handler
    name: lambda1-book-create
    
    events:
      - http:
          path: /book/create
          method: post
          cors: true
          request:
            schema:
              application/json: ${file(schemas/book-create-schema-request.json)}
              
    layers:
      - {Ref: LayerDependenciesLambdaLayer}

    environment:
      snsArn: ${self:custom.arnSns1Topic}
              
  sell-book:
    handler: sell_book.handler
    name: lambda2-sell-book
    
    events:
      - http:
          path: /sell/book
          method: post
          cors: true
          request:
            schema:
              application/json: ${file(schemas/sell-book-schema-request.json)}
              
    layers:
      - {Ref: LayerDependenciesLambdaLayer}

    environment:
      snsArn: ${self:custom.arnSns1Topic}
      
  sqs-to-s3:
    handler: sqs_to_s3.handler
    name: lambda3-sqs-to-s3
    
    events:
      - sqs:
          arn: ${self:custom.arnSqs1Queue}
          batchSize: 1
          
    layers:
      - {Ref: LayerDependenciesLambdaLayer}
      
    environment:
      BUCKET: ${self:custom.bucket}